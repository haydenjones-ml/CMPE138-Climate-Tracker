import folium
import pandas
import json
import geopandas

def update_geojson_with_storm_data(geojson_path, storm_query):
    """
    Now that GeoJSON is initialized, we need to populate each county with a categorized
    count of every storm.
    Parameters: geojson_path: filepath generated by 'map.py' that has our boundaries for each
    county; storm_query: SQL Query that fetches our storm data from NOAA database

    Output: return json_data, that will populate each county
    """

def create_map_with_updated_data(json_data, save_path):
    """
    GeoJSON Data now should contain every storm categorized by type and county, need to actually
    place them in each county. Refer to map.py for data population algorithm! Hint: Look into iloc
    in pandas, I can help out if needed as well
    Parameters: json_data: updated storm count after update_geojson_with_storm_data; save_path: temp
    storage path for our new dataframe/map

    Output: HTML file that contains county boundaries *and* new updated data per county
    """


"""
TODO: 
- Need to look into turning each county into a heatmap; should be possible with folium
- Slider/Dropdown member to re-query and update data and map
- .... to be continued
"""